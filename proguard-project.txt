# To enable ProGuard in your project, edit project.properties
# to define the proguard.config property as described in that file.
#
# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in ${sdk.dir}/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the ProGuard
# include property in project.properties.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# Add any project specific keep options here:

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

-dontobfuscate
-dontwarn java.lang.invoke.SerializedLambda
-dontwarn sun.misc.**
-dontwarn sun.nio.ch.DirectBuffer
-dontwarn kotlinx.atomicfu.InterceptorKt
-dontwarn java.beans.**
-dontnote kotlin.internal.jdk8.JDK8PlatformImplementations
-dontnote kotlin.internal.JRE8PlatformImplementations
-dontnote kotlin.internal.jdk7.JDK7PlatformImplementations
-dontnote kotlin.reflect.jvm.internal.ReflectionFactoryImpl
-dontnote COM.newmonics.PercClassLoader.**
-dontnote sun.reflect.ReflectionFactory
-dontnote org.objenesis.strategy.PlatformDescription
-dontnote org.apache.harmony.xnet.provider.jsse.NativeCrypto
#-dontwarn com.esotericsoftware.kryo.serializers.BeanSerializer
#-dontwarn com.esotericsoftware.kryo.serializers.UnsafeCacheFields
#-dontwarn com.esotericsoftware.kryo.io.UnsafeInput
#-dontwarn com.esotericsoftware.kryo.io.UnsafeMemoryInput
-keepclassmembers class ** {
    *** INSTANCE;
    int SDK_INT;
}
-keepclassmembers class kotlin.coroutines.experimental.SafeContinuation {
    *;
}
-keep class kotlin.coroutines.experimental.CoroutineContext$Key
-keep class kotlin.coroutines.experimental.CoroutineContext
-keep class kotlin.coroutines.experimental.Continuation
-keep class kotlin.jvm.functions.Function2